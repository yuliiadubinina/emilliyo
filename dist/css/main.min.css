/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-size:8px}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}*,[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}summary{display:list-item}[hidden],template{display:none}@media screen and (min-width:420px){html{font-size:10px}}@media screen and (min-width:992px){html{font-size:8px}}@media screen and (min-width:1200px){html{font-size:9px}}body,html{background:#f5f5f5;width:100%;min-height:100vh}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;font-size:1.6rem}.content{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.container{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;max-width:192rem;padding:0 1rem;margin:0 auto}@media screen and (min-width:768px){.container{padding:0 3rem}}@media screen and (min-width:992px){.container{padding:0 6rem}}.header{width:100%}.container--topbar{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;position:relative;z-index:99}.topbar{background-color:#fff}.topbar__logo,.topbar__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.topbar__wrap{-ms-flex-line-pack:distribute;align-content:space-around;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;height:8rem}.topbar__logo{padding:3px}.topbar__logo-img{width:8rem}.topbar__nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;list-style:none}.topbar__nav-item{padding-right:1.5rem;display:none}@media screen and (min-width:768px){.topbar__nav-item{display:inline-block}}.topbar__nav-link{text-decoration:none;color:#000;cursor:pointer}.topbar__nav-link:hover{color:#e40c0d}.topbar__burger{width:2rem;height:3px;background:#000;position:relative;margin-right:3rem}.topbar__burger:after,.topbar__burger:before{content:"";width:2rem;height:3px;background:#000;position:absolute}.topbar__burger:before{top:-6px}.topbar__burger:after{bottom:-6px}@media screen and (min-width:768px){.topbar__burger{display:none}}.topbar__tel{padding-right:8rem}.topbar__tel i,.topbar__tel-number span{color:#c7c7c7}.topbar__tel-number{text-decoration:none;color:#000}@media screen and (min-width:768px){.topbar__tel{padding-right:6rem}}@media screen and (min-width:992px){.topbar__tel{padding-right:3rem}}.topbar__lang{position:absolute;top:0;right:0;background-color:#e7e7e7;width:6rem;height:8rem;z-index:999}.container--menu-header,.topbar__lang-switch{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.topbar__lang-switch{height:50%;font-size:1.2rem;display:-webkit-box;display:-ms-flexbox;display:flex;color:#8d8d8d;text-decoration:none;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.topbar__lang-switch.active{background-color:#d9d9d9;font-size:1.6rem;color:#000}.container--menu-header{height:8rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-line-pack:distribute;align-content:space-around}.menu-header,.menu-header__nav{display:-webkit-box;display:-ms-flexbox;display:flex}.menu-header{background-color:#e40c0d;color:#fff}.menu-header__nav{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-header__nav-burger{width:2rem;height:2px;background:#fff;position:relative;margin-right:1rem}.menu-header__nav-burger:after,.menu-header__nav-burger:before{content:"";width:2rem;height:2px;background:#fff;position:absolute}.menu-header__nav-burger:before{top:-6px}.menu-header__nav-burger:after{bottom:-6px}.menu-header__nav-title{font-size:2rem;font-weight:600;display:inline-block}.menu-header__user-action,.menu-header__user-action-cart,.menu-header__user-action-compare,.menu-header__user-action-login{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-header__user-action{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.menu-header__user-action a,.navigation-aside a{text-decoration:none;color:#fff}.menu-header__user-action-cart,.menu-header__user-action-compare,.menu-header__user-action-login{padding:0 1.5rem}.menu-header__user-action-compare,.menu-header__user-action-login{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.menu-header__user-action-cart:active,.menu-header__user-action-cart:hover,.menu-header__user-action-compare:hover,.menu-header__user-action-login:hover{-webkit-box-shadow:0 0 6px 1px rgba(0,0,0,.2);box-shadow:0 0 6px 1px rgba(0,0,0,.2)}.menu-header__user-action-cart{-webkit-transition:all .3s;transition:all .3s}.menu-header__user-action span{display:inline-block;font-weight:300;font-size:1.4rem;padding-top:5px}.footer{background-color:#fff;height:30rem}.container--main,.main{display:-webkit-box;display:-ms-flexbox;display:flex}.main{padding-bottom:5rem}.container--main{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:relative}@media screen and (min-width:992px){.container--main::after{content:"";position:absolute;background:#fff;top:0;left:0;width:6rem;height:100%}}@media screen and (min-width:1440px){.container--main{height:77vh}}@media screen and (min-width:992px){.container--main{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}}.navigation-aside{background:#fff;padding-top:2rem;padding-right:3.5rem;-webkit-box-flex:1.8;-ms-flex:1.8 0;flex:1.8 0;display:none;margin-right:2rem;height:100%;position:relative}@media screen and (min-width:1200px){.navigation-aside{-webkit-box-flex:1.4;-ms-flex:1.4 0;flex:1.4 0}}@media screen and (min-width:992px){.navigation-aside{display:block}}@media screen and (min-width:1440px){.navigation-aside{-webkit-box-flex:1.1;-ms-flex:1.1 0;flex:1.1 0}}.navigation-aside a{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:2rem .5rem;border-bottom:2px solid #f5f5f5;color:#000;-webkit-transition:all .2s;transition:all .2s}.navigation-aside a:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px);color:#e40c0d}.navigation-aside a:hover svg{fill:#e40c0d}.navigation-aside a:active,.navigation-aside a:focus{outline:0;-webkit-transform:translateY(-1px);transform:translateY(-1px);color:#e40c0d}.navigation-aside a:active svg,.navigation-aside a:focus svg{fill:#e40c0d}@media screen and (min-width:1440px){.navigation-aside a{padding:3rem .5rem}}.navigation-aside svg{margin-right:1rem}.slider-container,.slider-main{-webkit-box-flex:6;-ms-flex:6 0;flex:6 0}.slider-container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.slider-main{margin:2rem 0;display:none;background:bottom/cover no-repeat url(../img/slide-main.png)}@media screen and (min-width:768px){.slider-main{display:block;height:40rem}}.slider-main__boxes{display:-webkit-box;display:-ms-flexbox;display:flex;position:relative;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width:992px){.slider-main__boxes{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}}.slider-main__boxes-content{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:100%;margin:1rem auto;background-color:#fff;padding:2rem 2.5rem}@media screen and (min-width:992px){.slider-main__boxes-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;width:20%;margin:0 2rem 0 0;padding:1rem 1.5rem}}@media screen and (min-width:1440px){.slider-main__boxes-content{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:25%}}.slider-main__boxes-content span{padding-right:2rem;font-size:3rem;font-weight:600}@media screen and (min-width:992px){.slider-main__boxes-content span{font-size:2rem}}.slider-main__big-btn{background:#e40c0d;color:#fff;padding:4rem 2rem;text-decoration:none;font-size:2rem;-webkit-transition:all .2s;transition:all .2s;cursor:pointer}.slider-main__big-btn:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px);-webkit-box-shadow:0 1rem 2rem rgba(0,0,0,.2);box-shadow:0 1rem 2rem rgba(0,0,0,.2)}.slider-main__big-btn:active,.slider-main__big-btn:focus{outline:0;-webkit-transform:translateY(-1px);transform:translateY(-1px);-webkit-box-shadow:0 .5rem 1rem rgba(0,0,0,.2);box-shadow:0 .5rem 1rem rgba(0,0,0,.2)}@media screen and (min-width:992px){.slider-main__big-btn{position:absolute;right:15%;bottom:0;width:18%;height:20rem;padding:4rem 1.5rem}}@media screen and (min-width:1440px){.slider-main__big-btn{right:7%;width:13%;padding:4rem 2.5rem}}.container--popular{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.popular__title{text-align:center;font-size:2rem;padding-bottom:2rem}@media screen and (min-width:576px){.popular__title{text-align:left;font-size:3rem}}.popular__products,.popular__products-list{display:-webkit-box;display:-ms-flexbox;display:flex}.popular__products-list{list-style:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;margin:0 auto}@media screen and (min-width:576px){.popular__products-list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}}.popular__products-list-item{margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-line-pack:center;align-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;background-color:#fff;margin-bottom:2rem;padding:2.5rem;position:relative;-webkit-transition:all .2s;transition:all .2s}.popular__products-list-item:hover{-webkit-box-shadow:0 1rem 2rem rgba(0,0,0,.2);box-shadow:0 1rem 2rem rgba(0,0,0,.2)}.popular__products-list-item:active,.popular__products-list-item:focus{outline:0;-webkit-box-shadow:0 .5rem 1rem rgba(0,0,0,.2);box-shadow:0 .5rem 1rem rgba(0,0,0,.2)}@media screen and (min-width:992px){.popular__products-list-item{width:23%}}.popular__products-list-item-img{margin:2rem auto;text-align:center;-webkit-transition:all .2s;transition:all .2s}.popular__products-list-item-img:hover{-webkit-transform:scale(1.1);transform:scale(1.1)}.popular__products-list-item-img:active,.popular__products-list-item-img:focus{outline:0;-webkit-transform:scale(1.1);transform:scale(1.1)}.popular__products-list-item-img img{max-width:70%;height:auto}.popular__products-list-item-title{text-decoration:none;color:#000;cursor:pointer;font-weight:700;font-size:1.8rem;padding-bottom:1rem}.popular__products-list-item-rating{padding-bottom:2rem;font-size:1.2rem}.popular__products-list-item-rating a{text-decoration:none;color:#8a8a8a}.popular__products-list-item-buy{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.popular__products-list-item-price{font-weight:700;font-size:2rem}.compare{position:absolute;top:2rem;right:2rem;cursor:pointer}.btn{background:#e40c0d;color:#fff}.btn,.btn:link,.btn:visited{text-decoration:none;padding:1rem 5rem;border-radius:3px;-webkit-transition:all .2s;transition:all .2s;font-size:1.6rem;cursor:pointer}.btn:hover{-webkit-transform:translateY(-3px);transform:translateY(-3px);-webkit-box-shadow:0 1rem 2rem rgba(0,0,0,.2);box-shadow:0 1rem 2rem rgba(0,0,0,.2)}.btn:active,.btn:focus{outline:0;-webkit-transform:translateY(-1px);transform:translateY(-1px);-webkit-box-shadow:0 .5rem 1rem rgba(0,0,0,.2);box-shadow:0 .5rem 1rem rgba(0,0,0,.2)}.stars{color:#ffd000}.product-icon{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;position:absolute;top:6rem}.product-icon svg{margin-bottom:1rem;background:#fff;-webkit-box-shadow:0 .5rem 1rem rgba(0,0,0,.2);box-shadow:0 .5rem 1rem rgba(0,0,0,.2);padding:.2rem;width:3rem;height:3rem;border-radius:4px}.container--partners{display:block}.partners{text-align:center;font-size:2rem;padding-bottom:2rem}@media screen and (min-width:576px){.partners{text-align:left;font-size:3rem}}.partners__logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media screen and (min-width:576px){.partners__logo{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}}.partners__logo-item{width:80%;padding-top:80%;margin:1rem auto;background:#fff;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}@media screen and (min-width:576px){.partners__logo-item{width:19%;padding-top:19%}}.partners__logo img{width:80%}.about__partners{width:40%;background:#fff;float:left}.about__emilliyo{display:-webkit-box;display:-ms-flexbox;display:flex;float:right;background:#fff;width:80%}.about__emilliyo-img{width:70%;background:center/cover no-repeat url(../img/about.png)}.about__emilliyo-content{width:30%}.active{color:#e40c0d}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
